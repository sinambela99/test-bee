
.job_template_config: &sshconfig
  before_script:
    - "which ssh-agent || ( apt-get install openssh-client )"
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > id_rsa
    - chmod 600 id_rsa
    - ssh-add id_rsa 
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan 103.150.92.227 >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
 

stages:
  - pull_backend
  - build_app
  - test_app
  - deploy_app
  - push_docker

variables:
  SERVER: 'paul@103.150.92.227'
  DIR_BE: '/home/paul/literature-backend'
  BRANCH: 'main'
  IMAGES_BE: 'ian/backend:1.0'
  DOMAIN_BE: 'https://api.sinambela.studentdumbways.my.id'
 
pull_backend:
  stage: pull_backend
  image: docker
  services:
    - docker:dind
  <<: *sshconfig
  script:
    - ssh $SERVER 
      "cd $DIR_BE;
      git pull origin $BRANCH;
      exit"
      

build_app:
  stage: build_app
  image: docker
  services:
    - docker:dind
  <<: *sshconfig
  script:
    - ssh $SERVER
     "cd $DIR_BE;
     docker rmi $IMAGES_BE;
     docker compose up -d database;
     docker build -t $IMAGES_BE .;
     docker images;
     docker compose up -d;
     exit"
      

test_app:
  stage: test_app
  image: docker
  services:
    - docker:dind
  <<: *sshconfig
  script:
    - ssh $SERVER 
     "docker ps -a;
     wget --spider $DOMAIN_BE;
     docker ps -a;
     exit"
       

deploy_app:
  stage: deploy_app
  image: docker
  services:
    - docker:dind
  <<: *sshconfig
  script:
    - ssh $SERVER 
     "docker compose up -d;
     docker compose ps -a;
     exit"
      

push_docker:
  stage: push_docker
  image: docker
  services:
    - docker:dind
  <<: *sshconfig 

  script:
    - ssh $SERVER 
     "docker compose down;
     docker push $IMAGES_BE;
     docker compose up -d;
     docker compose ps -a;
     exit"
      


